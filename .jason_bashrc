
alias pl='cd ~/energysavvy/quantify-pipeline/quantify-pipeline/'

# Tox-env
alias te='source .tox/py27/bin/activate'

alias sc='starcluster -c ~/workspace/energysavvy/evaluate-pipeline/decoupled-pipeline/starcluster-config'

alias mon="xrandr --output LVDS1 --off;sleep 1;xrandr --output LVDS1 --auto;sleep 1;xrandr --output DP-1 --right-of LVDS1;xrandr --output DP-2 --right-of DP-1"
alias project="xrandr --output HDMI1 --auto; xrandr --output HDMI1 --same-as eDP1"
alias mainscreenturnon="xrandr --output HDMI1 --auto; xrandr --output HDMI1 --same-as eDP1"

alias instancekill="list-instances | grep quantify | petl \"fromtext().capture('lines', '([^ ]*) *(i-[^ ]*) *', ['n','i']).rowmap(lambda row: ['terminate-instance -n {} -i {}'.format(row.n, row.i)], header=['command'], failonerror=True).tocsv()\""
alias volkill="list-volumes | grep quantify | petl \"fromtext().capture('lines', '(quantify-pipeline-[^ ]*) *(vol-[^ ]*) (.*)', ['n','v','s']).rowmap(lambda row: ['delete-ebs-volume -n {} -v {} -s {}'.format(row.n, row.v, row.s)], header=['command'], failonerror=True).tocsv()\""

# e.g. tests --site=njng
tests() {
  time dvpython nyserda /vagrant/mainrepo/infra/BuildUtil/unit_tests.py --jobs=2 $@
}

flake() {
  time ddjango flake8 --exclude=migrations --config=/vagrant/mainrepo/infra/flake8-config/flake8 /vagrant/mainrepo
}

codetime() {
  mainscreenturnon
  es
  /etc/liclipse
  sudo vagrant up && devserver service nginx restart
}


# eg. prod_log leap
prod_log() {
  site=$1
  target='/home/jason/workspace/energysavvy/prod_logs/'${site}'/'
  rsync -r -a -v -e ssh jcurtis@${site}.energysavvy.com:/home/django/sites/${site}_prod/log/*.log ${target}
  echo ${target}
  cd ${target}
}
